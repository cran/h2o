% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/targetencoder.R
\name{h2o.target_encode_fit}
\alias{h2o.target_encode_fit}
\title{Create Target Encoding Map}
\usage{
h2o.target_encode_fit(frame, x, y, fold_column = NULL)
}
\arguments{
\item{frame}{An H2OFrame object with which to create the target encoding map.}

\item{x}{List of categorical column names or indices that we want apply target encoding to. 
Case when item in the list is a list of multiple columns itself is not supported for now.}

\item{y}{The name or column index of the response variable in the frame.}

\item{fold_column}{(Optional) The name or column index of the fold column in the frame.}
}
\value{
Returns an object containing the target encoding mapping for each column in `x`.
}
\description{
This is an API for a new target encoding implemented in JAVA.
}
\details{
Creates a target encoding map based on group-by columns (`x`) and binary target column (`y`).
Computing target encoding for high cardinality categorical columns can improve performance of supervised
learning models.
}
\seealso{
\code{\link{h2o.target_encode_transform}} for applying the target encoding mapping to a frame.
}
